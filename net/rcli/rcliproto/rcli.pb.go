// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rcli.proto

package rcliproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	LoginHash            string   `protobuf:"bytes,1,opt,name=LoginHash,proto3" json:"LoginHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d14d85b7ce07a3f0, []int{0}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetLoginHash() string {
	if m != nil {
		return m.LoginHash
	}
	return ""
}

type LoginResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d14d85b7ce07a3f0, []int{1}
}
func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CmdRequest struct {
	LoginHash            string   `protobuf:"bytes,1,opt,name=LoginHash,proto3" json:"LoginHash,omitempty"`
	Command              string   `protobuf:"bytes,2,opt,name=Command,proto3" json:"Command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmdRequest) Reset()         { *m = CmdRequest{} }
func (m *CmdRequest) String() string { return proto.CompactTextString(m) }
func (*CmdRequest) ProtoMessage()    {}
func (*CmdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d14d85b7ce07a3f0, []int{2}
}
func (m *CmdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdRequest.Unmarshal(m, b)
}
func (m *CmdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdRequest.Marshal(b, m, deterministic)
}
func (m *CmdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdRequest.Merge(m, src)
}
func (m *CmdRequest) XXX_Size() int {
	return xxx_messageInfo_CmdRequest.Size(m)
}
func (m *CmdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CmdRequest proto.InternalMessageInfo

func (m *CmdRequest) GetLoginHash() string {
	if m != nil {
		return m.LoginHash
	}
	return ""
}

func (m *CmdRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type CmdResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmdResponse) Reset()         { *m = CmdResponse{} }
func (m *CmdResponse) String() string { return proto.CompactTextString(m) }
func (*CmdResponse) ProtoMessage()    {}
func (*CmdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d14d85b7ce07a3f0, []int{3}
}
func (m *CmdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdResponse.Unmarshal(m, b)
}
func (m *CmdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdResponse.Marshal(b, m, deterministic)
}
func (m *CmdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdResponse.Merge(m, src)
}
func (m *CmdResponse) XXX_Size() int {
	return xxx_messageInfo_CmdResponse.Size(m)
}
func (m *CmdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CmdResponse proto.InternalMessageInfo

func (m *CmdResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "rcli.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "rcli.LoginResponse")
	proto.RegisterType((*CmdRequest)(nil), "rcli.CmdRequest")
	proto.RegisterType((*CmdResponse)(nil), "rcli.CmdResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RemoteCliClient is the client API for RemoteCli service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteCliClient interface {
	LoginCheck(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	SendCmd(ctx context.Context, in *CmdRequest, opts ...grpc.CallOption) (*CmdResponse, error)
}

type remoteCliClient struct {
	cc *grpc.ClientConn
}

func NewRemoteCliClient(cc *grpc.ClientConn) RemoteCliClient {
	return &remoteCliClient{cc}
}

func (c *remoteCliClient) LoginCheck(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/rcli.RemoteCli/LoginCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteCliClient) SendCmd(ctx context.Context, in *CmdRequest, opts ...grpc.CallOption) (*CmdResponse, error) {
	out := new(CmdResponse)
	err := c.cc.Invoke(ctx, "/rcli.RemoteCli/SendCmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteCliServer is the server API for RemoteCli service.
type RemoteCliServer interface {
	LoginCheck(context.Context, *LoginRequest) (*LoginResponse, error)
	SendCmd(context.Context, *CmdRequest) (*CmdResponse, error)
}

func RegisterRemoteCliServer(s *grpc.Server, srv RemoteCliServer) {
	s.RegisterService(&_RemoteCli_serviceDesc, srv)
}

func _RemoteCli_LoginCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteCliServer).LoginCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcli.RemoteCli/LoginCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteCliServer).LoginCheck(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteCli_SendCmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CmdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteCliServer).SendCmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcli.RemoteCli/SendCmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteCliServer).SendCmd(ctx, req.(*CmdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RemoteCli_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rcli.RemoteCli",
	HandlerType: (*RemoteCliServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginCheck",
			Handler:    _RemoteCli_LoginCheck_Handler,
		},
		{
			MethodName: "SendCmd",
			Handler:    _RemoteCli_SendCmd_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rcli.proto",
}

func init() { proto.RegisterFile("rcli.proto", fileDescriptor_d14d85b7ce07a3f0) }

var fileDescriptor_d14d85b7ce07a3f0 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x4a, 0xce, 0xc9,
	0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x74, 0xb8, 0x78, 0x7c, 0xf2,
	0xd3, 0x33, 0xf3, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x64, 0xb8, 0x38, 0xc1, 0x7c,
	0x8f, 0xc4, 0xe2, 0x0c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x84, 0x80, 0x92, 0x3a, 0x17,
	0x2f, 0x54, 0x75, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x18, 0x17, 0x5b, 0x50, 0x6a, 0x71,
	0x69, 0x4e, 0x09, 0x58, 0x2d, 0x47, 0x10, 0x94, 0xa7, 0xe4, 0xc2, 0xc5, 0xe5, 0x9c, 0x9b, 0x42,
	0x94, 0xa1, 0x42, 0x12, 0x5c, 0xec, 0xce, 0xf9, 0xb9, 0xb9, 0x89, 0x79, 0x29, 0x12, 0x4c, 0x60,
	0x39, 0x18, 0x57, 0x49, 0x95, 0x8b, 0x1b, 0x6c, 0x0a, 0x7e, 0xcb, 0x8c, 0xca, 0xb8, 0x38, 0x83,
	0x52, 0x73, 0xf3, 0x4b, 0x52, 0x9d, 0x73, 0x32, 0x85, 0xcc, 0xb9, 0xb8, 0xc0, 0x46, 0x3b, 0x67,
	0xa4, 0x26, 0x67, 0x0b, 0x09, 0xe9, 0x81, 0x7d, 0x8c, 0xec, 0x45, 0x29, 0x61, 0x14, 0x31, 0x88,
	0xd9, 0x4a, 0x0c, 0x42, 0x06, 0x5c, 0xec, 0xc1, 0xa9, 0x79, 0x29, 0xce, 0xb9, 0x29, 0x42, 0x02,
	0x10, 0x15, 0x08, 0x1f, 0x48, 0x09, 0x22, 0x89, 0xc0, 0x74, 0x24, 0xb1, 0x81, 0x03, 0xd2, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x82, 0x1a, 0xbc, 0x27, 0x56, 0x01, 0x00, 0x00,
}
